// ADD R - 1110_000_0100_0_AAAA_DDDD_0000_0000_BBBB
// ADD I - 1110_001_0100_0_AAAA_DDDD_0000_IIII_IIII
// SUB R - 1110_000_0010_0_AAAA_DDDD_0000_0000_BBBB
// SUB I - 1110_001_0010_0_AAAA_DDDD_0000_IIII_IIII
// CMP R - 1110_000_0010_1_AAAA_DDDD_0000_0000_BBBB
// CMP I - 1110_001_0010_1_AAAA_DDDD_0000_IIII_IIII
// AND   - 1110_000_0000_0_AAAA_DDDD_0000_0000_BBBB
// ORR   - 1110_000_1100_0_AAAA_DDDD_0000_0000_BBBB
// LDR   - 1110_010_1100_1_AAAA_DDDD_IIII_IIII_IIII
// STR   - 1110_010_1100_0_AAAA_DDDD_IIII_IIII_IIII
//COND_1010_IIII_IIII_IIII_IIII_IIII_IIII

// Equal            - COND = 0000 
// Not Equal        - COND = 0001 
// Greater or Equal - COND = 1010 
// Greater          - COND = 1100 
// Less or Equal    - COND = 1101 
// Less             - COND = 1011 


/*
|       BINARY INSTRUCTIONS       |              OPERATION        |     PC    |  HEX INSTRUCTION  
*/
11100010100011110000000000000000 // MAIN		ADD R0, R15, #0		      0    => E28F0000
11100000010000000001000000000000 // 		    SUB R1, R0, R0		      4	  => E0401000
11100010100000010010000000001010 // 		    ADD R2, R1, #10           8	  => E281200A
11100000100000000011000000000010 // 		    ADD R3, R0, R2		      12   => E0803002
11100010010000100100000000000011 // 		    SUB R4, R2, #3		      16   => E2424003
11100000010000110101000000000100 // 		    SUB R5, R3, R4		      20   => E0435004
11100001100001000110000000000101 // 		    ORR R6, R4, R5		      24   => E1846005
11100000000001100111000000000101 // 		    AND R7, R6, R5		      28   => E0067005
11100101100000010111000000000000 // 		    STR R7, [R1, #0]	         32   => E5817000
11101010000000000000000000000001  // 		    B SKIP                    36   => EA000001
11100101100000010001000000000000 // 		    STR R1, [R1, #0]          40   => E5811000
11101010000000000000000000000000  // 		    B LOOP	                  44   => EA000000
11100101100100011000000000000000 // SKIP		LDR R8, [R1, #0]	         48   => E5918000  
11100010010101101001000000001111 // BSTART     CMP R9, R6, #15          52   => E256900F
00011010111111111111111111111101  //             BNE BSTART             56   => 1AFFFFFD
11100000010101011001000000000100 //             CMP R9, R5, R4          60   => E0559004
00011010000000000000000000000000  //             BNE BNETESTED          64   => 1A000000
11101010111111111111111111111010  //             B BSTART               68   => EAFFFFFA
11100000010100101001000000000011 // BNETESTED  CMP R9, R2, R3           72   => E0529003
10101010111111111111111111111000  //             BGE BSTART             76   => AAFFFFF8
11100000010100111001000000000010 //             CMP R9, R3, R2          80   => E0539002
10101010000000000000000000000000  //             BGE BGETESTED          84   => AA000000
11101010111111111111111111110101  //             B BSTART               88   => EAFFFFF5
11100000010100111001000000000010 // BGETESTED  CMP R9, R3, R2           92   => E0539002
11011010111111111111111111110011  //             BLE BSTART             96   => DAFFFFF3
11100000010100101001000000000011 //             CMP R9, R2, R3          100  => E0529003
11011010000000000000000000000000  //             BLE BLETESTED          104  => DA000000
11101010111111111111111111110000  //             B BSTART               108  => EAFFFFF0
11100010100000011000000000000001 // BLETESTED  ADD R8, R1, #1           112  => E2818001
11101010111111111111111111111110  // LOOP        B LOOP                 116  => EAFFFFFE